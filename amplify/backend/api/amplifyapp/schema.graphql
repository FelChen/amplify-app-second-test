# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/react/build-a-backend/graphqlapi/customize-authorization-rules/
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type Todo @model {
  id: ID!
  name: String!
  description: String
}
type Player @model {
  id: ID!
  name: String!
  health: Int!
}

type Modifier @model{
  id: ID!
  name: String!
  description: String!
  strengthMod: Int
  dexterityMod: Int
  magicStrengthMod: Int
  magicDexterityMod: Int
  maxHealthMod: Int
  maxManaMod: Int
}

enum StatType {
  HEALTH
  MANA
}
type calculationInput @model{
  id: ID!

}

type Ability @model{
  id: ID!
  name: String!
  description: String!
  cost: Int!
  costType: StatType!
  toHit: Calculation!
  toDodge: Calculation!
  damage: Calculation!
  modifiers: [Modifier!] @hasMany
}

type abilityCast @model{
  id: ID!
  caster: Character!
  targets: [Character!] @hasMany
  ability: Ability!
}

interface Calculation{
  id: ID!
  name: String!
}
type normalCalculation implements Calculation @model{
  id: ID!
  name: String!
  mean: String!
  standardDeviation: String!
}

type Character @model {
  id: ID!
  name: String!
  strength: Int
  dexterity: Int
  magicStrength: Int
  magicDexterity: Int
  maxHealth: Int!
  currentHealth: Int!
  temporaryHealth: Int
  temporaryArmor: Int
  maxMana: Int
  currentMana: Int
  modifiers: [Modifier!] @hasMany
}
type CombatState @model {
  id: ID!
  charactersEngaged: [Character!] @hasMany
  currentCharacterTurn: Int!
}